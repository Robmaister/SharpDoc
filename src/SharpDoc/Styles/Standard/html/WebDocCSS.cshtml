@*
// Copyright (c) 2010-2013 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.       
// -------------------------------------------------------------------------------
// Override this template to modify the global behavior for each Dump functions
// -------------------------------------------------------------------------------
*@
@model SharpDoc.TemplateContext
@using SharpDoc.Model
@using System.IO;
@using SharpDoc;

@helper Dump()
{
    @if (Model.Config.WebDocumentation != null)
    {
        Model.debug();
        var nbCss = Model.Config.WebDocumentation.numberCss;
        
        // First call : copy css content in local files
        if(nbCss == -1)
        {
            var cssFiles = Model.Config.WebDocumentation.GetCssFiles();
            var cssDirectory = Path.Combine(Model.OutputDirectory, "css");

		    if (!Directory.Exists(cssDirectory))
			    Directory.CreateDirectory(cssDirectory);

            nbCss = cssFiles.Count;

            for(int i = 0; i< nbCss; i++)
            {
                var cssFileName = string.Format("WebDocCss_{0}.css", i);
                var cssPath = Path.Combine(cssDirectory, cssFileName);
                var cssContent = cssFiles[i];
                
                cssContent = Model.Config.WebDocumentation.IsolateCss(cssContent, ".externDoc");
		        
                File.WriteAllText(cssPath, cssContent);
            }        
        }

        for(int i = 0; i < nbCss; i++)
        {
            string s = string.Format("<link href=\"../css/WebDocCss_{0}.css\" rel=\"stylesheet\" type=\"text/css\">", i);
            @s
        }
     
    }
}